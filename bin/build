#!/usr/bin/env ruby
load File.expand_path(File.join(File.dirname(__FILE__), "..", "lib", "vanagon.rb"))

optparse = Vanagon::OptParse.new("#{File.basename(__FILE__)} <project-name> <platform-name> [<target>] [options]",
                                 [:workdir, :remote_workdir, :configdir, :engine, :preserve, :verbose, :skipcheck])
options = optparse.parse! ARGV

project = ARGV[0]
platforms = ARGV[1]
targets = ARGV[2]

if project.nil? or platforms.nil?
  warn "project and platform are both required arguments."
  puts optparse
  exit 1
end

platform_list = platforms.split(',')
if targets
  target_list = targets.split(',')
else
  target_list = []
end

platform_list.zip(target_list).each do |pair|
  platform, target = pair
  artifact = Vanagon::Driver.new(platform, project, options.merge({ :target => target }))

  artifact.verbose = true if options[:verbose]
  artifact.preserve = true if options[:preserve]

  artifact.run
end
