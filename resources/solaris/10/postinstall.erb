#!/usr/bin/bash

<%- get_services.each do |service| -%>
# Importing service <%= service.name %>
/usr/sbin/svccfg import <%= service.service_file %> || true
<%- end -%>

# Move any new configfiles into place
<%- get_configfiles.each do |config|
dest_file = config.path.gsub(/\.pristine$/, '') -%>

if [ -f "<%= dest_file %>" ]; then
  echo "Detected file at '<%= dest_file %>'; updated file at '<%= config.path %>'."
else
  cp -pr '<%= config.path %>' '<%= dest_file %>'
fi

<%- end -%>

# Set up any specific permissions needed...
<%- (get_directories + get_configfiles + get_files).select { |pathname| pathname.has_overrides? }.uniq.each do |file_or_directory| -%>
  <%= "chmod '#{file_or_directory.mode}' '#{file_or_directory.path}'" if file_or_directory.mode %>
  <%- if file_or_directory.owner -%>
    if getent passwd '<%= file_or_directory.owner %>' &> /dev/null; then
      chown '<%= file_or_directory.owner %>' '<%= file_or_directory.path %>'
    else
      echo "Error updating '<%= file_or_directory.path %>': user '<%= file_or_directory.owner %>' does not exist."
    fi
  <%- end -%>
  <%- if file_or_directory.group -%>
    if getent group '<%= file_or_directory.group %>' &> /dev/null; then
      chgrp '<%= file_or_directory.group %>' '<%= file_or_directory.path %>'
    else
      echo "Error updating '<%= file_or_directory.path %>': group '<%= file_or_directory.group %>' does not exist."
    fi
  <%- end -%>
<%- end -%>
